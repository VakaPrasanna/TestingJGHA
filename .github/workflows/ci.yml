name: CI
'on':
  workflow_dispatch:
  push:
    branches:
    - master
    - main
  pull_request: {}
env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  IMAGE_REPO_NAME: mavenwebapp
  COMMIT: ${{ github.sha }}
  REPOSITORY_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/mavenwebapp
jobs:
  code-checkout:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Code checkout
      uses: ./.github/actions/code_checkout
  build:
    runs-on: ubuntu-latest
    needs: code-checkout
    steps:
    - uses: actions/checkout@v4
    - name: Run Build
      uses: ./.github/actions/build
  # execute-sonarqube-report:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Run Execute Sonarqube Report
  #     uses: ./.github/actions/execute_sonarqube_report
  quality-gate-check:
    runs-on: ubuntu-latest
    #needs: execute-sonarqube-report
    steps:
    - uses: actions/checkout@v4
    - name: Run Quality Gate Check
      uses: ./.github/actions/quality_gate_check
  nexus-upload:
    runs-on: ubuntu-latest
    needs: quality-gate-check
    steps:
    - uses: actions/checkout@v4
    - name: Run Nexus Upload
      uses: ./.github/actions/nexus_upload
  # login-to-aws-ecr:
  #   runs-on: ubuntu-latest
  #   needs: nexus-upload
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Run Login to AWS ECR
  #     uses: ./.github/actions/login_to_aws_ecr
  building-docker-image:
    runs-on: ubuntu-latest
    #needs: login-to-aws-ecr
    steps:
    - uses: actions/checkout@v4
    - name: Run Building Docker Image
      uses: ./.github/actions/building_docker_image
  pushing-docker-image-into-ecr:
    runs-on: ubuntu-latest
    needs: building-docker-image
    steps:
    - uses: actions/checkout@v4
    - name: Run Pushing Docker image into ECR
      uses: ./.github/actions/pushing_docker_image_into_ecr
  update-image-in-k8s-manifest-file:
    runs-on: ubuntu-latest
    needs: pushing-docker-image-into-ecr
    steps:
    - uses: actions/checkout@v4
    - name: Run Update image in K8s manifest file
      uses: ./.github/actions/update_image_in_k8s_manifest_file
  deploy-to-k8s-cluster:
    runs-on: ubuntu-latest
    needs: update-image-in-k8s-manifest-file
    steps:
    - uses: actions/checkout@v4
    - name: Run Deploy to K8s cluster
      uses: ./.github/actions/deploy_to_k8s_cluster
